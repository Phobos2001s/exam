import utime                            #для работы со временем в micropython
from machine import Pin, PWM            #для работы с пинами


frequency = 5000                        #частота для светодиода
trig = Pin(13, Pin.OUT)                 #тригер для датчика HC-SR04
echo = Pin(12, Pin.IN)                  #ответ от датчика HC-SR04
led = PWM(Pin(26), frequency)           #ШИМ для светодиода с указанием пина и частоты

while True:                             #запускаем бесконечный цикл
    temp = 0                            #переменная для записи жуточного значения расстояния
    cm = 0                              #растояние до объекта в сантиметрах
    for n in range(10):                 #для точности вычисления посчитаем среднее значение за 10 итераций
        trig.off()                      #устанавливаем триггер в нулевое положение
        utime.sleep_ms(2)               #ждем 2 мс
        trig.on()                       #запускаем триггер
        utime.sleep_ms(10)              #по документации, триггер должен работать 10 мс
        trig.off()                      #выключаем триггер

        while echo.value() == 0:        #пока не получили логический сигнал единица
            pass                        #ждем его получение, pass это комада - бездельник
        time1 = utime.ticks_us()        #время старта

        while echo.value() == 1:        #пока логическая единица не стала нулем
            pass                        #опять же бездельничаем
        time2 = utime.ticks_us()        #время конца

        temp = (time2 - time1)/58.8     #время работы. Т.к. звук проходит 1 см за 58.8 микросекунды, получим растояние поделив время на коэффициент
        cm += temp                      #сумируем время для повышения точности

    cm = (cm/10)/2                      #т.к. цикл отработал 10 итераций, поделим сумму 10 значений на 10. Т.к. звук сначала идет к объекту, а потом от него на датчик, поделим на 2
    print(cm)                           #печатаем растояние для наглядности
    if cm < 5.0:                        #если растояние меньше 5 см
        led.duty(1023)                  #включаем лампочку
    else:                               #иначе
        led.duty(0)                      #выключаем
    utime.sleep(2)                      #2 секунды перед следующей итерации чтобы печать не летала